// Code generated by MockGen. DO NOT EDIT.
// Source: spenmo/payment-processing/payment-processing/internal/pkg/store/redis (interfaces: RCardStore)

// Package redismocks is a generated GoMock package.
package redismocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRCardStore is a mock of RCardStore interface
type MockRCardStore struct {
	ctrl     *gomock.Controller
	recorder *MockRCardStoreMockRecorder
}

// MockRCardStoreMockRecorder is the mock recorder for MockRCardStore
type MockRCardStoreMockRecorder struct {
	mock *MockRCardStore
}

// NewMockRCardStore creates a new mock instance
func NewMockRCardStore(ctrl *gomock.Controller) *MockRCardStore {
	mock := &MockRCardStore{ctrl: ctrl}
	mock.recorder = &MockRCardStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRCardStore) EXPECT() *MockRCardStoreMockRecorder {
	return m.recorder
}

// CreateTransaction mocks base method
func (m *MockRCardStore) CreateTransaction(arg0, arg1, arg2 int64, arg3 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTransaction", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateTransaction indicates an expected call of CreateTransaction
func (mr *MockRCardStoreMockRecorder) CreateTransaction(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTransaction", reflect.TypeOf((*MockRCardStore)(nil).CreateTransaction), arg0, arg1, arg2, arg3)
}

// LockCreateCard mocks base method
func (m *MockRCardStore) LockCreateCard(arg0 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LockCreateCard", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// LockCreateCard indicates an expected call of LockCreateCard
func (mr *MockRCardStoreMockRecorder) LockCreateCard(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LockCreateCard", reflect.TypeOf((*MockRCardStore)(nil).LockCreateCard), arg0)
}

// ReleaseLockCreateCard mocks base method
func (m *MockRCardStore) ReleaseLockCreateCard(arg0 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReleaseLockCreateCard", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReleaseLockCreateCard indicates an expected call of ReleaseLockCreateCard
func (mr *MockRCardStoreMockRecorder) ReleaseLockCreateCard(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReleaseLockCreateCard", reflect.TypeOf((*MockRCardStore)(nil).ReleaseLockCreateCard), arg0)
}
